{"version":3,"file":"welcome-screen.js","sources":["js/data/game-data.js","js/game/check-answers.js","js/data/game-model.js","js/game/change-screen.js","js/util.js","js/views/abstract-view.js","js/views/logo-view.js","js/game/get-radius.js","js/views/timer-view.js","js/views/mistakes-view.js","js/views/player-view.js","js/views/artist-view.js","js/views/genre-view.js","js/views/confirm-view.js","js/screens/game-screen.js","js/data/data-adapter.js","js/loader.js","js/views/result-view.js","js/views/replay-view.js","js/game/get-result.js","js/game/get-comparison.js","js/game/calculate-points.js","js/screens/result-screen.js","js/views/error-view.js","js/app.js","js/views/welcome-view.js","js/screens/welcome-screen.js"],"sourcesContent":["export const GAME_SETTINGS = {\n  totalQuestions: 10,\n  totalTime: 300000, // 5 min in ms\n  fastAnswerTime: 30000, // 30 sec in ms\n  maxMistakes: 2,\n  losePoints: -1,\n  regularPoints: 1,\n  fastPoints: 2,\n  wrongPoints: -2\n};\n\nexport const GameStatus = {\n  TIMEUP: `timeup`,\n  LOSE: `lose`,\n  WIN: `win`,\n  CONTINUE: `continue`\n};\n\nexport const INITIAL_STATE = Object.freeze({\n  level: 0,\n  timeLeft: GAME_SETTINGS.totalTime,\n  mistakes: 0,\n  answers: []\n});\n","/**\n * Проверяет ответы пользователя\n * @param {Object} question Вопрос\n * @param {Array} answers Ответы пользователя\n * @return {Boolean} Возвращает true, если выбраны только верные ответы\n */\n\nconst checkAnswers = (question, answers) => {\n  const correctAnswers = [...Object.entries(question.answers)].reduce((arr, [answerValue, answerData]) => {\n    if (answerData.correct) {\n      arr.push(answerValue);\n    }\n    return arr;\n  }, []);\n\n  if (correctAnswers.length === answers.length) {\n    return correctAnswers.every((elem) => answers.includes(elem));\n  } else {\n    return false;\n  }\n};\n\nexport default checkAnswers;\n","import {GAME_SETTINGS, INITIAL_STATE, GameStatus} from \"./game-data\";\nimport checkAnswers from \"../game/check-answers\";\n\nclass GameModel {\n  constructor(data) {\n    this.data = data;\n    // Чтобы включить режим отладки, нужно добавить в url параметр ?debug=true\n    // Правильные ответы будут обозначены красным.\n    this.debug = new URLSearchParams(location.search).get(`debug`) || false;\n    this.restart();\n  }\n\n  get questions() {\n    return this.data.questions;\n  }\n\n  get audiosMap() {\n    return this.data.audiosMap;\n  }\n\n  get level() {\n    return this.state.level;\n  }\n\n  get timeLeft() {\n    return this.state.timeLeft;\n  }\n\n  get mistakes() {\n    return this.state.mistakes;\n  }\n\n  get currentQuestion() {\n    return this.questions[this.level];\n  }\n\n  get status() {\n    if (this.state.timeLeft === 0) {\n      return GameStatus.TIMEUP;\n    }\n\n    if (this.state.mistakes > GAME_SETTINGS.maxMistakes) {\n      return GameStatus.LOSE;\n    }\n\n    if (this.state.answers.length === GAME_SETTINGS.totalQuestions) {\n      return GameStatus.WIN;\n    }\n\n    return GameStatus.CONTINUE;\n  }\n\n  restart() {\n    this.state = Object.assign({}, INITIAL_STATE);\n    this.state.answers = []; // Удаляем ответы, оставшиеся с предыдущей игры\n  }\n\n  levelUp() {\n    this.state.level++;\n  }\n\n  saveAnswer(answer) {\n    const correct = checkAnswers(this.currentQuestion, answer);\n\n    if (!correct) {\n      this.state.mistakes++;\n    }\n\n    const time = GAME_SETTINGS.totalTime - this.timeLeft - this._calculateAnswersTime();\n    this.state.answers.push({time, correct});\n  }\n\n  tick(interval) {\n    if (this.timeLeft > 0) {\n      this.state.timeLeft -= interval;\n      return true;\n    }\n    return false;\n  }\n\n  _calculateAnswersTime() {\n    return this.state.answers.reduce((sum, answer) => {\n      sum += answer.time;\n      return sum;\n    }, 0);\n  }\n\n}\n\nexport default GameModel;\n","/**\n * Переключает текущий экран.\n * @param {Node} screen Экран, который нужно отобразить.\n */\nconst changeScreen = (screen) => {\n  const currentScreen = document.querySelector(`section.main`);\n  document.querySelector(`div.app`).replaceChild(screen, currentScreen);\n};\n\nexport default changeScreen;\n","// Варианты склонения для 1 шт, 2-4 шт, 0 и 5-20 шт\nconst cases = {\n  minutes: [`минуту`, `минуты`, `минут`],\n  seconds: [`секунду`, `секунды`, `секунд`],\n  points: [`балл`, `балла`, `баллов`],\n  mistakes: [`ошибку`, `ошибки`, `ошибок`],\n  attempts: [`раз`, `раза`, `раз`],\n  fast: [`быстрый`, `быстрых`, `быстрых`]\n};\n\nexport const TimeInMs = {\n  ONE_MINUTE: 60000,\n  ONE_SECOND: 1000\n};\n\n/**\n * Переводит миллисекунды в минуты и секунды\n * @param {number} ms Миллисекунды.\n * @return {object} Время в минутах и секундах\n */\nexport const msToMinutesAndSeconds = (ms) => {\n  const minutes = Math.floor(ms / TimeInMs.ONE_MINUTE);\n  const seconds = ((ms % TimeInMs.ONE_MINUTE) / TimeInMs.ONE_SECOND).toFixed(0);\n  return {minutes, seconds};\n};\n\n/**\n * Возвращает существительное в правильном склонении\n * в зависимости от стоящего перед ним числа\n * @param {number} number Число\n * @param {string} noun Существительное\n * @return {string} Существительное в правильном склонении\n */\nexport const pluralize = (number, noun) => {\n  const nouns = cases[noun];\n\n  let n = Math.abs(number);\n\n  // Ends in 1, excluding 11\n  if (n % 10 === 1 && n % 100 !== 11) {\n    return nouns[0];\n  }\n  // Ends in 2-4, excluding 12-14\n  if (n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20)) {\n    return nouns[1];\n  }\n\n  // Everything else\n  return nouns[2];\n};\n","/**\n * Создает DOM-элемент по шаблону.\n * @param {string} markup Разметка элемента.\n * @return {Node} Новый элемент.\n */\nconst render = (markup = ``) => {\n  const template = document.createElement(`template`);\n  template.innerHTML = markup.trim();\n  return template.content.firstChild;\n};\n\nexport default class AbstractView {\n  constructor() {\n    if (new.target === AbstractView) {\n      throw new Error(`Can't instantiate AbstractView, only concrete one`);\n    }\n  }\n\n  get template() {\n    throw new Error(`Template is required`);\n  }\n\n  get element() {\n    if (this._element) {\n      return this._element;\n    }\n    this._element = this.render();\n    this.bind(this._element);\n    return this._element;\n  }\n\n  render() {\n    return render(this.template);\n  }\n\n  bind() {\n    // bind handlers if required\n  }\n\n}\n","import AbstractView from \"./abstract-view\";\n\nexport default class LogoView extends AbstractView {\n  constructor() {\n    super();\n  }\n\n  get template() {\n    return `<a class=\"play-again play-again__wrap\" href=\"#\">\n      <img class=\"play-again__img\" src=\"img/melody-logo-ginger.png\" alt=\"logo\" width=\"177\" height=\"76\">\n    </a>`;\n  }\n\n  onLogoClick() {}\n\n  bind() {\n    this.element.addEventListener(`click`, (evt) => {\n      evt.preventDefault();\n      this.onLogoClick();\n    });\n  }\n\n}\n","const getRadius = (timeRatio, radius) => {\n  const stroke = (2 * Math.PI * radius).toFixed(); // Circumference of a circle is 2 * Pi * r\n  const offset = ((1 - timeRatio) * stroke).toFixed();\n\n  return {stroke, offset};\n};\n\nexport default getRadius;\n","import AbstractView from \"./abstract-view\";\nimport {msToMinutesAndSeconds} from \"../util\";\nimport getRadius from \"../game/get-radius\";\n\nconst RADIUS = 370;\nconst ALARM = 30000; // Когда осталось менее 30 секунд таймер должен начать мигать красным цветом\n\nexport default class TimerView extends AbstractView {\n  constructor(timeLeft, totalTime) {\n    super();\n    this.timeLeft = timeLeft;\n    this.totalTime = totalTime;\n  }\n\n  get template() {\n    const timerRadius = getRadius(this.timeLeft / this.totalTime, RADIUS);\n    const timeLeftInMinSec = msToMinutesAndSeconds(this.timeLeft);\n\n    return `<div>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"timer\" viewBox=\"0 0 780 780\">\n        <circle\n          cx=\"390\" cy=\"390\" r=\"370\"\n          class=\"timer-line\"\n          stroke-dasharray=\"${timerRadius.stroke}\"\n          stroke-dashoffset=\"${timerRadius.offset}\"\n          style=\"filter: url(../#blur); transform: rotate(-90deg) scaleY(-1); transform-origin: center\"></circle>\n      </svg>\n      <div class=\"timer-value ${this.timeLeft < ALARM ? `timer-value--finished` : ``}\" xmlns=\"http://www.w3.org/1999/xhtml\">\n        <span class=\"timer-value-mins\">${timeLeftInMinSec.minutes.toString().padStart(2, `0`)}</span><!--\n        --><span class=\"timer-value-dots\">:</span><!--\n        --><span class=\"timer-value-secs\">${timeLeftInMinSec.seconds.toString().padStart(2, `0`)}</span>\n      </div>\n    </div>`;\n  }\n\n}\n","import AbstractView from \"./abstract-view\";\n\nexport default class TimerView extends AbstractView {\n  constructor(mistakes) {\n    super();\n    this.mistakes = mistakes;\n  }\n\n  get template() {\n    return `\n    <div class=\"main-mistakes\">\n      ${Array(this.mistakes)\n      .fill(`<img class=\"main-mistake\" src=\"img/wrong-answer.png\" width=\"35\" height=\"49\">`)\n      .join(``)}\n    </div>`;\n  }\n\n}\n","import AbstractView from \"./abstract-view\";\n\nexport default class PlayerView extends AbstractView {\n  constructor(audio, autoplay) {\n    super();\n    this.audio = audio;\n    this.autoplay = autoplay;\n\n    this.audio.autoplay = this.autoplay;\n    const player = this.element.querySelector(`.player`);\n    player.insertBefore(this.audio, player.firstElementChild);\n  }\n\n  get template() {\n    return `<div class=\"player-wrapper\">\n    <div class=\"player\">\n      <button class=\"player-control player-control--${this.autoplay ? `pause` : `play`}\"></button>\n      <div class=\"player-track\">\n        <span class=\"player-status\"></span>\n      </div>\n    </div>\n  </div>`;\n  }\n\n  onPlayClicked() {}\n\n  bind() {\n    const player = this.element.querySelector(`.player`);\n    player.addEventListener(`click`, (evt) => {\n      evt.preventDefault();\n      evt.stopPropagation();\n\n      if (this.isPlaying()) {\n        this.pauseTrack();\n      } else {\n        this.playTrack();\n      }\n    });\n  }\n\n  pauseTrack() {\n    this.element.querySelector(`audio`).pause();\n    this.element.querySelector(`.player-control`).classList.replace(`player-control--pause`, `player-control--play`);\n  }\n\n  playTrack() {\n    this.onPlayClicked();\n    this.element.querySelector(`audio`).play().catch((error) => {\n      throw new Error(error); // An error ocurred or the user agent prevented playback.\n    });\n    this.element.querySelector(`.player-control`).classList.replace(`player-control--play`, `player-control--pause`);\n  }\n\n  stopTrack() {\n    this.pauseTrack();\n    this.element.querySelector(`audio`).currentTime = 0;\n  }\n\n  isPlaying() {\n    const audio = this.element.querySelector(`audio`);\n    return audio.duration > 0 && !audio.paused;\n  }\n\n}\n","import AbstractView from \"./abstract-view\";\nimport PlayerView from \"./player-view\";\n\nexport default class ArtistView extends AbstractView {\n  constructor(model) {\n    super();\n    this.model = model;\n    this.question = this.model.currentQuestion;\n    this.player = new PlayerView(this.model.audiosMap.get(this.question.src), true);\n\n    const placeholder = this.element.querySelector(`.player`);\n    placeholder.parentElement.replaceChild(this.player.element, placeholder);\n  }\n\n  get template() {\n    return `<section class=\"main main--level main--level-artist\">\n    <div class=\"main-wrap\">\n      <h2 class=\"title main-title\">${this.question.title}</h2>\n      <div class=\"player\"></div>\n      <form class=\"main-list\">\n        ${[...Object.entries(this.question.answers)].map(([answerValue, answerData], index) => `\n        <div class=\"main-answer-wrapper\">\n          <input class=\"main-answer-r\" type=\"radio\" id=\"answer-${index + 1}\" name=\"answer\" value=\"${answerValue}\"/>\n          <label class=\"main-answer\" for=\"answer-${index + 1}\">\n            <img class=\"main-answer-preview ${this.model.debug && answerData.correct ? `main-answer-preview--correct` : ``}\" src=\"${answerData.track.image}\"\n                 alt=\"${answerData.track.artist}\" width=\"134\" height=\"134\">\n            ${answerData.track.artist}\n          </label>\n        </div>`).join(``)}\n      </form>\n    </div>\n  </section>`;\n  }\n\n  onAnswerSend() {}\n\n  bind() {\n    // Обработчик для формы\n    const artistForm = this.element.querySelector(`form.main-list`);\n    const artistAnswers = Array.from(artistForm.querySelectorAll(`input[name=\"answer\"]`));\n\n    artistAnswers.forEach((answer) => {\n      answer.addEventListener(`change`, (evt) => {\n        evt.preventDefault();\n        const checkedAnswers = artistAnswers.filter((input) => input.checked).map((input) => input.value);\n        this.onAnswerSend(checkedAnswers);\n      });\n    });\n  }\n\n  pauseAllTracks() {\n    if (this.player.isPlaying()) {\n      this.player.pauseTrack();\n    }\n  }\n\n  stopAllTracks() {\n    this.player.stopTrack();\n  }\n\n}\n","import AbstractView from \"./abstract-view\";\nimport PlayerView from \"./player-view\";\n\nexport default class GenreView extends AbstractView {\n  constructor(model) {\n    super();\n    this.model = model;\n    this.question = this.model.currentQuestion;\n    this.players = [];\n\n    const placeholders = this.element.querySelectorAll(`.player`);\n    placeholders.forEach((placeholder, index) => {\n      const player = new PlayerView(this.model.audiosMap.get(this.question.answers[placeholder.id].track.src), index === 0);\n      player.onPlayClicked = () => this.pauseAllTracks();\n      this.players.push(player);\n      placeholder.parentElement.replaceChild(player.element, placeholder);\n    });\n  }\n\n  get template() {\n    return `<section class=\"main main--level main--level-genre\">\n    <div class=\"main-wrap\">\n      <h2 class=\"title\">${this.question.title}</h2>\n      <form class=\"genre\">\n        ${[...Object.entries(this.question.answers)].map(([answerValue, answerData], index) => `\n        <div class=\"genre-answer\">\n          <div class=\"player\" id=\"${answerValue}\"></div>\n          <input type=\"checkbox\" name=\"answer\" value=\"${answerValue}\" id=\"a-${index + 1}\">\n          <label class=\"genre-answer-check ${this.model.debug && answerData.correct ? `genre-answer-check--correct` : ``}\" for=\"a-${index + 1}\"></label>\n        </div>`).join(``)}\n        <button class=\"genre-answer-send\" type=\"submit\">Ответить</button>\n      </form>\n    </div>\n  </section>`;\n  }\n\n  onAnswerSend() {}\n\n  bind() {\n    // Обработчик для формы\n    const genreForm = this.element.querySelector(`form.genre`);\n    const genreAnswers = Array.from(genreForm.querySelectorAll(`input[name=\"answer\"]`));\n    const sendAnswerButton = genreForm.querySelector(`.genre-answer-send`);\n\n    const onAnswerChange = () => {\n      const someAnswersChecked = genreAnswers.some((el) => el.checked === true);\n      sendAnswerButton.disabled = !someAnswersChecked;\n    };\n\n    sendAnswerButton.disabled = true; // Кнопка «Ответить» отключена, пока не выбран ни один из вариантов ответа.\n\n    genreAnswers.forEach((answer) => {\n      answer.addEventListener(`change`, onAnswerChange);\n    });\n\n    sendAnswerButton.addEventListener(`click`, (evt) => {\n      evt.preventDefault();\n      const checkedAnswers = genreAnswers.filter((input) => input.checked).map((input) => input.value);\n      this.onAnswerSend(checkedAnswers);\n    });\n  }\n\n  pauseAllTracks() {\n    this.players.map((it) => it.pauseTrack());\n  }\n\n  stopAllTracks() {\n    this.players.map((it) => it.stopTrack());\n  }\n\n}\n","import AbstractView from \"./abstract-view\";\n\nexport default class ConfirmView extends AbstractView {\n  constructor(text = `Вы уверены?`) {\n    super();\n    this.text = text;\n  }\n\n  get template() {\n    return `<section class=\"modal-confirm modal-confirm__wrap\">\n      <form class=\"modal-confirm__inner\">\n        <button class=\"modal-confirm__close\" type=\"button\">Закрыть</button>\n        <h2 class=\"modal-confirm__title\">Подтверждение</h2>\n        <p class=\"modal-confirm__text\">${this.text}</p>\n        <div class=\"modal-confirm__btn-wrap\">\n          <button class=\"modal-confirm__btn\">Ок</button>\n          <button class=\"modal-confirm__btn\">Отмена</button>\n        </div>\n      </form>\n    </section>`;\n  }\n\n  onConfirm() {}\n\n  onCancel() {}\n\n  bind() {\n    const closeButton = this.element.querySelector(`.modal-confirm__close`);\n    const confirmButton = this.element.querySelectorAll(`.modal-confirm__btn`)[0];\n    const cancelButton = this.element.querySelectorAll(`.modal-confirm__btn`)[1];\n\n    const cancelHandler = (evt) => {\n      evt.stopPropagation();\n      evt.preventDefault();\n\n      this.onCancel();\n    };\n\n    cancelButton.addEventListener(`click`, cancelHandler);\n    closeButton.addEventListener(`click`, cancelHandler);\n\n    confirmButton.addEventListener(`click`, (evt) => {\n      evt.stopPropagation();\n      evt.preventDefault();\n\n      this.onConfirm();\n    });\n  }\n\n}\n","import {GAME_SETTINGS, GameStatus} from \"../data/game-data\";\nimport changeScreen from \"../game/change-screen\";\nimport {TimeInMs} from \"../util\";\n\nimport Application from \"../app\";\nimport LogoView from \"../views/logo-view\";\nimport TimerView from \"../views/timer-view\";\nimport MistakesView from \"../views/mistakes-view\";\nimport ArtistView from \"../views/artist-view\";\nimport GenreView from \"../views/genre-view\";\nimport ConfirmView from \"../views/confirm-view\";\n\nconst GameView = {\n  guessArtist: ArtistView,\n  chooseGenre: GenreView\n};\n\nexport default class GameScreen {\n  constructor(model) {\n    this.model = model;\n    this.screen = new GameView[this.model.currentQuestion.type](this.model);\n    this.logo = new LogoView();\n    this.timer = new TimerView(this.model.timeLeft, GAME_SETTINGS.totalTime);\n    this.mistakes = new MistakesView(this.model.mistakes);\n    this.modal = new ConfirmView(`Вы уверены что хотите начать игру заново?`);\n\n    this._interval = null;\n\n    this.bind();\n    this.init();\n    this.startTimer();\n  }\n\n  get element() {\n    return this.screen.element;\n  }\n\n  init() {\n    const wrapper = this.element.querySelector(`.main-wrap`);\n    this.screen.element.insertBefore(this.logo.element, wrapper);\n    this.screen.element.insertBefore(this.timer.element, wrapper);\n    this.screen.element.insertBefore(this.mistakes.element, wrapper);\n  }\n\n  bind() {\n    this.logo.onLogoClick = () => this.confirmRestart();\n\n    this.screen.onAnswerSend = (userAnswers) => {\n      this.stopTimer();\n      this.screen.stopAllTracks(); // Баг в Safari: песни продолжают проигрываться при переходе на новый экран\n      this.model.saveAnswer(userAnswers);\n\n      if (this.model.status === GameStatus.CONTINUE) {\n        this.model.levelUp();\n        changeScreen(new GameScreen(this.model).element);\n      } else {\n        Application.showResult(this.model);\n      }\n    };\n\n    this.modal.onConfirm = () => Application.showWelcome();\n    this.modal.onCancel = () => {\n      this.startTimer();\n      this.screen.element.removeChild(this.modal.element);\n    };\n  }\n\n  stopTimer() {\n    clearInterval(this._interval);\n  }\n\n  startTimer() {\n    this._interval = setInterval(() => {\n      const tick = this.model.tick(TimeInMs.ONE_SECOND);\n      if (tick) {\n        this.updateTimer();\n      } else {\n        this.stopTimer();\n        Application.showResult(this.model);\n      }\n    }, TimeInMs.ONE_SECOND);\n  }\n\n  updateTimer() {\n    const newTimer = new TimerView(this.model.timeLeft, GAME_SETTINGS.totalTime);\n    this.screen.element.replaceChild(newTimer.element, this.timer.element);\n    this.timer = newTimer;\n  }\n\n  confirmRestart() {\n    this.stopTimer();\n    this.screen.pauseAllTracks();\n    this.screen.element.appendChild(this.modal.element);\n  }\n\n}\n","const QuestionType = {\n  artist: `guessArtist`,\n  genre: `chooseGenre`\n};\n\nconst preProcessType = (type) => {\n  return QuestionType[type];\n};\n\nconst preProcessArtistAnswers = (answers) => {\n  let newAnswers = {};\n\n  answers.forEach((answer, index) => {\n    newAnswers[`val-${index}`] = {\n      track: {\n        artist: answer.title,\n        image: answer.image.url\n      },\n      correct: answer.isCorrect\n    };\n  });\n\n  return newAnswers;\n};\n\nconst preProcessGenreAnswers = (answers, genre) => {\n  let newAnswers = {};\n\n  answers.forEach((answer, index) => {\n    newAnswers[`val-${index}`] = {\n      track: {\n        src: answer.src\n      },\n      correct: answer.genre === genre\n    };\n  });\n\n  return newAnswers;\n};\n\nconst adaptServerData = (data) => {\n\n  for (const question of data) {\n    question.type = preProcessType(question.type);\n\n    question.title = question.question;\n\n    if (question.type === QuestionType.artist) {\n      question.answers = preProcessArtistAnswers(question.answers);\n    } else if (question.type === QuestionType.genre) {\n      question.answers = preProcessGenreAnswers(question.answers, question.genre);\n    }\n  }\n\n  return data;\n};\n\nexport default adaptServerData;\n","import adaptServerData from \"./data/data-adapter\";\nimport Application from \"./app\";\n\nconst SERVER_URL = `https://es.dump.academy/guess-melody`;\nconst APP_ID = 2096;\nconst StatusCodes = {\n  OK_MIN: 200,\n  OK_MAX: 300\n};\n\nconst checkStatus = (response, errorText) => {\n  if (response.status >= StatusCodes.OK_MIN && response.status < StatusCodes.OK_MAX) {\n    return response;\n  }\n\n  throw new Error(`${errorText} Ошибка: ${response.status} ${response.statusText}`);\n};\n\nconst toJSON = (response) => response.json();\n\nconst loadAudio = (src) => {\n  return new Promise((resolve, reject) => {\n    const audio = new Audio();\n    audio.src = src;\n    audio.preload = `none`;\n    audio.load();\n    audio.oncanplaythrough = () => resolve([audio.src, audio]);\n    audio.onerror = () => reject(new Error(`Не удалось загрузить аудиофайл.`));\n  });\n};\n\nconst loadAllAudio = (questions) => {\n  // Создаем список треков. Ссылки не должны повторяться,\n  // чтобы не загружать одну и ту же песню несколько раз\n\n  const audiosSrc = questions.reduce((set, question) => {\n    if (question.src) {\n      set.add(question.src);\n    } else {\n      const answers = question.answers;\n      for (const i in answers) {\n        if (answers.hasOwnProperty(i)) {\n          set.add(answers[i].track.src);\n        }\n      }\n    }\n    return set;\n  }, new Set());\n\n  // Когда все треки загрузятся, возвращаем первоначальный список вопросов\n  // и мапку, из которой будем брать элементы аудио по src\n  return Promise.all([...audiosSrc].map((src) => loadAudio(src)))\n    .then((audios) => {\n      return {questions, audiosMap: new Map(audios)};\n    });\n};\n\nexport default class Loader {\n\n  static loadData() {\n    return fetch(`${SERVER_URL}/questions`)\n      .then((response) => checkStatus(response, `Не удалось загрузить вопросы.`))\n      .then(toJSON)\n      .then((data) => adaptServerData(data))\n      .then((questions) => loadAllAudio(questions))\n      .catch(Application.showError);\n  }\n\n  // Этот метод вызывается после сохранения результата игрока,\n  // поэтому ответ никогда не должен быть пустым и 404 это ошибка\n  static loadStatistics() {\n    return fetch(`${SERVER_URL}/stats/${APP_ID}`)\n      .then((response) => checkStatus(response, `Не удалось загрузить статистику.`))\n      .then(toJSON)\n      .then((statistics) => statistics.map((it) => it.points))\n      .catch(Application.showError);\n  }\n\n  static saveData(data) {\n    data = Object.assign({}, data);\n    const requestSettings = {\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': `application/json`\n      },\n      method: `POST`\n    };\n    return fetch(`${SERVER_URL}/stats/${APP_ID}`, requestSettings)\n      .then((response) => checkStatus(response, `Не удалось сохранить результат.`))\n      .catch(Application.showError);\n  }\n\n}\n","import AbstractView from \"./abstract-view\";\n\nexport default class ResultView extends AbstractView {\n  constructor(result) {\n    super();\n    this.result = result;\n  }\n\n  get template() {\n    return `<section class=\"main main--result\">\n    <section class=\"logo\" title=\"Угадай мелодию\"><h1>Угадай мелодию</h1></section>\n  \n    <h2 class=\"title\">${this.result.title}</h2>\n    <div class=\"main-stat\">${this.result.description}</div>\n  </section>`;\n  }\n\n  onStatsLoad(comparison) {\n    this.element.insertAdjacentHTML(`beforeend`, `<span class=\"main-comparison\">${comparison}</span>`);\n  }\n\n}\n","import AbstractView from \"./abstract-view\";\n\nexport default class ReplayView extends AbstractView {\n  constructor(title) {\n    super();\n    this.title = title;\n  }\n\n  get template() {\n    return `<span role=\"button\" tabindex=\"0\" class=\"main-replay\">${this.title}</span>`;\n  }\n\n  onReplayButtonClick() {}\n\n  bind() {\n    this.element.addEventListener(`click`, () => this.onReplayButtonClick());\n  }\n\n}\n","import {msToMinutesAndSeconds, pluralize} from \"../util\";\nimport {GAME_SETTINGS, GameStatus} from \"../data/game-data\";\n\nconst getResult = (state, output, points) => {\n  let result;\n\n  switch (output) {\n    case GameStatus.TIMEUP:\n      result = {\n        title: `Увы и ах!`,\n        description: `Время вышло!<br>Вы не успели отгадать все мелодии`\n      };\n      break;\n    case GameStatus.LOSE:\n      result = {\n        title: `Какая жалость!`,\n        description: `У вас закончились все попытки.<br>Ничего, повезёт в следующий раз!`\n      };\n      break;\n    case GameStatus.WIN: {\n      const time = msToMinutesAndSeconds(GAME_SETTINGS.totalTime - state.timeLeft);\n      const fastAnswers = state.answers.filter((answer) => answer.correct && answer.time < GAME_SETTINGS.fastAnswerTime).length;\n\n      result = {\n        title: `Вы настоящий меломан!`,\n        description: `За&nbsp;${time.minutes}&nbsp;${pluralize(time.minutes, `minutes`)} и ${time.seconds}&nbsp;${pluralize(time.seconds, `seconds`)}\n        <br>вы&nbsp;набрали ${points} ${pluralize(points, `points`)} (${fastAnswers} ${pluralize(fastAnswers, `fast`)})\n        <br>совершив ${state.mistakes}&nbsp;${pluralize(state.mistakes, `mistakes`)}`\n      };\n      break;\n    }\n    default: {\n      throw new Error(`Unknown result: ${output}`);\n    }\n  }\n\n  return result;\n};\n\nexport default getResult;\n","const getComparison = (points, statistics) => {\n  statistics.sort((a, b) => b - a);\n  const playersCount = statistics.length;\n\n  if (playersCount === 1) {\n    return `Вы первый, кто сыграл в эту игру!`;\n  }\n\n  const place = statistics.indexOf(points) + 1;\n  const rate = Math.round(((playersCount - place) / playersCount) * 100);\n  return `Вы заняли ${place} место из ${playersCount}. Это лучше, чем у ${rate}% игроков`;\n};\n\nexport default getComparison;\n","import {GAME_SETTINGS, GameStatus} from \"../data/game-data\";\n\nconst calculatePoints = (gameState, gameOutput) => {\n  if (gameOutput === GameStatus.TIMEUP || gameOutput === GameStatus.LOSE) {\n    return GAME_SETTINGS.losePoints;\n  }\n\n  return gameState.answers.reduce((points, answer) => {\n    if (answer.correct) {\n      points += (answer.time < GAME_SETTINGS.fastAnswerTime) ? GAME_SETTINGS.fastPoints : GAME_SETTINGS.regularPoints;\n    } else {\n      points += GAME_SETTINGS.wrongPoints;\n    }\n    return points;\n  }, 0);\n};\n\nexport default calculatePoints;\n","import Application from \"../app\";\nimport Loader from \"../loader\";\n\nimport ResultView from \"../views/result-view\";\nimport ReplayView from \"../views/replay-view\";\n\nimport getResult from \"../game/get-result\";\nimport getComparison from \"../game/get-comparison\";\nimport calculatePoints from \"../game/calculate-points\";\nimport {GameStatus} from \"../data/game-data\";\n\nexport default class ResultScreen {\n  constructor(model) {\n    this.model = model;\n    this.points = calculatePoints(this.model.state, this.model.status);\n    this.screen = new ResultView(getResult(this.model.state, this.model.status, this.points));\n    this.replay = new ReplayView((this.model.status === GameStatus.WIN ? `Сыграть` : `Попробовать`) + ` ещё раз`);\n\n    this._saveAndCompare();\n    this.bind();\n    this.init();\n  }\n\n  get element() {\n    return this.screen.element;\n  }\n\n  init() {\n    this.screen.element.appendChild(this.replay.element);\n  }\n\n  bind() {\n    this.replay.onReplayButtonClick = () => Application.showGame(this.model.data);\n  }\n\n  _saveAndCompare() {\n    // Если выигрыш, сохраняем результат и загружаем статистику\n    // и показываем сравнение с другими игроками\n    if (this.model.status === GameStatus.WIN) {\n      Loader.saveData({date: Date.now(), points: this.points})\n        .then(Loader.loadStatistics)\n        .then((data) => {\n          if (data) {\n            this.stats = data;\n            this.screen.onStatsLoad(getComparison(this.points, this.stats));\n          }\n        });\n    }\n  }\n\n}\n","import AbstractView from \"./abstract-view\";\n\nconst MODAL_TIMEOUT = 5000; // 5 sec\n\nexport default class ErrorView extends AbstractView {\n  constructor(text = ``) {\n    super();\n    this.text = text;\n  }\n\n  get template() {\n    return `<section class=\"modal-error modal-error__wrap\">\n      <div class=\"modal-error__inner\">\n        <h2 class=\"modal-error__title\">Произошла ошибка!</h2>\n        <p class=\"modal-error__text\">${this.text}</p>\n      </div>\n    </section>`;\n  }\n\n  bind() {\n    const onModalClick = () => {\n      this.element.removeEventListener(`click`, onModalClick);\n      this.element.remove();\n    };\n\n    // Сообщение удаляется по клику\n    this.element.addEventListener(`click`, onModalClick);\n\n    // Сообщение удаляется через 5 секунд\n    setTimeout(onModalClick, MODAL_TIMEOUT);\n  }\n\n}\n","import GameModel from \"./data/game-model\";\nimport WelcomeScreen from \"./screens/welcome-screen\";\nimport GameScreen from \"./screens/game-screen\";\nimport ResultScreen from \"./screens/result-screen\";\nimport changeScreen from \"./game/change-screen\";\nimport ErrorView from \"./views/error-view\";\n\nconst app = document.querySelector(`div.app`);\n\nexport default class Application {\n\n  static showWelcome() {\n    const welcomeScreen = new WelcomeScreen();\n    changeScreen(welcomeScreen.element);\n  }\n\n  static showGame(data) {\n    const model = new GameModel(data);\n    const gameScreen = new GameScreen(model);\n    changeScreen(gameScreen.element);\n  }\n\n  static showResult(model) {\n    const resultScreen = new ResultScreen(model);\n    changeScreen(resultScreen.element);\n  }\n\n  static showError(error) {\n    const modal = new ErrorView(error.message);\n    app.appendChild(modal.element);\n  }\n\n}\n","import AbstractView from \"./abstract-view\";\nimport {msToMinutesAndSeconds, pluralize} from \"../util\";\n\nconst LoaderText = {\n  PROGRESS: `Игра загружается...`,\n  FAIL: `Загрузить еще раз`\n};\n\nexport default class WelcomeView extends AbstractView {\n  constructor(settings, callback) {\n    super();\n    this.settings = settings;\n    this.callback = callback;\n  }\n\n  get template() {\n    const totalTimeMin = msToMinutesAndSeconds(this.settings.totalTime).minutes;\n    const maxMistakes = this.settings.maxMistakes;\n\n    return `<section class=\"main main--welcome\">\n      <section class=\"logo\" title=\"Угадай мелодию\"><h1>Угадай мелодию</h1></section>\n      <p class=\"text loader\">${LoaderText.PROGRESS}</p>\n      <button class=\"main-play main-play--hidden\">Начать игру</button>\n      <h2 class=\"title main-title\">Правила игры</h2>\n      <p class=\"text main-text\">\n        Правила просты&nbsp;— за&nbsp;${totalTimeMin} ${pluralize(totalTimeMin, `minutes`)} ответить на все вопросы.<br>\n        Ошибиться можно ${maxMistakes} ${pluralize(maxMistakes, `attempts`)}.<br>\n        Удачи!\n      </p>\n    </section>`;\n  }\n\n  onPlayButtonClick() {}\n\n  onLoadSuccess() {\n    this.element.querySelector(`.main-play`).classList.remove(`main-play--hidden`);\n    this.element.querySelector(`.loader`).remove();\n  }\n\n  onLoadFail() {\n    const loader = this.element.querySelector(`.loader`);\n\n    const onLoaderClick = () => {\n      loader.textContent = LoaderText.PROGRESS;\n      loader.classList.remove(`loader--failed`);\n      this.callback();\n      loader.removeEventListener(`click`, onLoaderClick);\n    };\n\n    // Если данные не загрузились, попробовать еще раз\n    loader.textContent = LoaderText.FAIL;\n    loader.classList.add(`loader--failed`);\n    loader.addEventListener(`click`, onLoaderClick);\n  }\n\n  bind() {\n    const playButton = this.element.querySelector(`.main-play`);\n    playButton.addEventListener(`click`, () => this.onPlayButtonClick());\n  }\n}\n","/** @module Приветствие */\n\nimport Application from \"../app\";\nimport Loader from \"../loader\";\nimport WelcomeView from \"../views/welcome-view\";\nimport {GAME_SETTINGS} from \"../data/game-data\";\n\nexport default class WelcomeScreen {\n  constructor() {\n    this.loadQuestions = () => {\n      Loader.loadData()\n      .then((data) => {\n        if (data) {\n          this.data = data;\n          this.screen.onLoadSuccess();\n        } else {\n          this.screen.onLoadFail();\n        }\n      });\n    };\n\n    this.screen = new WelcomeView(GAME_SETTINGS, this.loadQuestions);\n\n    this.bind();\n    this.init();\n  }\n\n  get element() {\n    return this.screen.element;\n  }\n\n  init() {\n    this.loadQuestions();\n  }\n\n  bind() {\n    this.screen.onPlayButtonClick = () => Application.showGame(this.data);\n  }\n\n}\n"],"names":["TimerView","MistakesView"],"mappings":"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"}